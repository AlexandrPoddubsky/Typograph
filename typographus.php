<?php
/**
 * Typographus class file.
 *
 * Typographus applies typographic rules to the text.
 *
 * @version x.1
 *
 * @author Alexander Makarov (http://smee-again.livejournal.com/)
 * @author Maxim Oransky (http://rmcreative.ru/)
 * @author idle sign (http://idlesign.ya.ru)
 *
 * @link http://code.google.com/p/typograph
 */

/**
 * Благодарности:
 *  -=Ustas=- http://vingrad.ru/@-=Ustas=-/
 *  faZeful http://fazeful.ru/
 *  Naruvi (Begemot) http://priop.ru/
 *  grasshopper
 *  eagle
 *  SHAman
 *  Max
 *  Reki
 *  Zav
 *  sadhaka
 *  Алексей Волкогон
 */

class Typographus
{
    /**
     * Основной метод класса. Применяет типографические правила к заданной
     * строке.
     * @param string $str Строка, полежащая типографированию.
     * @param string $mode Режим типографирования:
     * title — для заголовков
     * text — для текстов
     * html — для текстов в html
     * @return string Типографированная строка.
     */
    public function process($str, $mode='text')
    {

        /**
         * @todo Подготовку типографики для html следует отделить от основной чистки кода.
         * @todo Функцию обратного вызова работы с регулярными выражениями следует научить понимать разные типы разметки - html, bbcode, пр. См. параметр $mode того метода.
         */

        $rules = array(

            /**
             * Этот массив содержит правила типографирования.
             * Каждое правило должно быть снабжено примером "было/стало".
             *
             * ВНИМАНИЕ
             * Последовательность правил имеет значение!
             */


            // -----------------------------------------------------------
            // Начинаем денормализацию — приведение к "общему" виду.

            /**
             * Превращаем неразрывные пробелы представленные как html в обычные.
             * Было:  Иван,&nbsp;ты?
             * Стало: Иван, ты?
             * @todo С неразрывными пробелами все плохо — кто в лес, кто по дрова. В правиле стоит символ Alt+0160.
             */
            '~(&nbsp;|&#160;)~u' => ' ',

            /**
             * Много пробелов или табуляций превращаем в один пробел.
             * Было:  Мама    мыла раму.
             * Стало: Мама мыла раму.
             */
            '~(\s+|\t+)~u' => ' ',

            /**
             * Превращаем любые кавычки в лапки (").
             * Также превращаем в лапки стоящие рядом апострофы.
             * Было:  Фабрика &laquo;Красная Заря-3&raquo;
             * Стало: Фабрика "Красная Заря-3"
             */
            '~(«|»|„|“|”|&laquo;|&raquo;|&quot;|&#34;|&#171;|&#187;|&#8220;|&#8221;|&#8222|(\'\'))~u' => '"',

            /**
             * Превращаем тире, дефисы и пр. чёрточки в дефисы (дефисо-минусы).
             * Было:  Маме — раму!
             * Стало: Маме - раму!
             */
            '~(-|­|–|—|―|−|--|&#8210;|&#8211;|&#8212;|&#8213;|&ndash;|&mdash;)~u' => '-',

            // -----------------------------------------------------------
            // Приведение к "общему" виду закончено, начинаем приведение к
            // виду "нормальному".

            /**
             * Первую попавщуюся букву делаем заглавной.
             * Всё, что было до буквы, оставляем как есть.
             * Было:  начнем наш рассказ.
             * Стало: Начнем наш рассказ.
             */
            '~^(\P{L})*([\p{L}])~ue' => "'$1'.mb_convert_case('$2', MB_CASE_UPPER, 'UTF-8')",

            /**
             * Знак дефиса, ограниченный с обоих сторон цифрами, заменим знаком короткого тире (n-dash).
             * Было:  Температура повысилась на 7 - 8 градусов.
             * Стало: Температура повысилась на 7-8 градусов.
             */
            '~(\d)\s*-\s*(\d)~u' => '$1–$2',

            /**
             * Дефис, обособленный с обеих сторон пробелами, либо с
             * предшествующей запятой превращаем в тире.
             * Было:  "Маме - раму!",- кричал Иван.
             * Стало: "Маме — раму!", — кричал Иван.
             */
            '~(\s|,)-\s~u' => '$1— ',

            /**
             * Ставим обязательные запятые перед союзами "а" и "но".
             * Было:  Иван очень хотел но не получилось.
             * Стало: Иван очень хотел, но не получилось.
             */
            '~([\P{P}])(\s(а|но)\s)~u' => '$1, $2',

            /**
             * Отделяем прилипшие к словам открывающие скобки,
             * склевиваем скобки с выражением в них.
             * Было:  Иван( сын Петра )был силён.
             * Стало: Иван (сын Петра) был силён.
             */
            '~(\S)\(~u' => '$1 (',
            '~(\(|\[)\s~u' => '$1',
            '~\s(\)|\])~u' => '$1',

            /**
             * Уничтожаем лишние пробелы перед знаками препинания, процентами,
             * добавляем нужные пробелы после знаков препинания.
             * Если за скобкой следует знак пукнтуации, после скобки пробел не
             * ставится.
             * Если за двоеточием или заятой следует цифра, то пробел вставлять
             * не нужно, потому что это время (14:45) или
             * десятичная дробь (14,59).
             * Было:  Иван очень желал в 23:15 ,но не случилось (ему 14,5 лет).
             * Стало: Иван очень желал в 23:15, но не случилось (ему 14,5 лет).
             */
            '~\s(!|\?|\.|,|:|;|%)~u' => '$1',
            '~(!|\?|;)(\S)~u' => '$1 $2',
            '~(\.)([^:])~u' => '$1 $2',
            '~(\))([\P{P}])~u' => '$1 $2',
            '~(:|,)([^\d|\s])~u' => '$1 $2',

            /**
             * Убираем лишние пробелы во множественных знаках пунктуации.
             * Было:  Иван, ты? ???????
             * Стало: Иван, ты????????
             */
            '~((!|\?|\.)\s(!|\?|\.))~u' => '$2$3',

            /**
             * Двойные восклицательные, вопросительные знаки сокращаем до
             * одинарных.
             * @todo Возможна логическая ошибка — скорее следует превратить в три знака, а не в один.
             * Было:  Иван, ты??
             * Стало: Иван, ты?
             */
            '~([\?|!]){2}+~u' => '$1',

            /**
             * Устранение избыточной пунктуации:
             * 1. Восклицательные знаки;
             * 2. Вопросительные знаки;
             * 3. Многоточия.
             * Было:  Иван, ты????????
             * Стало: Иван, ты???
             */
            '~(!!!)!+~u' => '$1',
            '~(\?\?\?)\?+~u' => '$1',
            '~(\.\.\.)\.+~u' => '$1',

            /**
             * От две или три точки превращаем в многоточие.
             * @todo В предыдущих версиях было от 2 до 5 знаков и что-то об авторской задумке. Ой, ли!
             * Было:  Мама мыла раму..
             * Стало: Мама мыла раму…
             */
            '~\.{2,3}~u' => '…',

            /**
             * Знаки плюс и минус, стоящиеся рядом сливаем в один знак.
             * Было:  Пусть будет +-2.
             * Стало: Пусть будет ±2.
             */
            '~([^\+]|^)\+-~u' => '$1±',

            /**
             * Знаки (c), (r), (tm) заменяем на правильные.
             * Было:  (c) 2009, Иван Лжец и компания.
             * Стало: © 2009, Иван Лжец и компания.
             */
            '~\((c|с)\)~iu' => '©',
            '~\(r\)~iu' => '®',
            '~\(tm\)~iu' => '™',


            /**
             * В обозначениях габаритов (вида 10x10) заменяем знак, избавляемся
             * от лишних пробелов.
             * Было:  Д.Ш.В.: 10 x 15Х 15.
             * Стало: 
             */
            '~((\d+)|\s*)[х|Х|x|X]\s*(\d+)~u' => '$2×$3',

            /**
             * Частоупотребляемые дроби заменяем соответствующими символами.
             * @todo Возможны проблемы в этими символами при переводе iconv в cp1251.
             * Было:  Ежу досталась 1/4 пирога.
             * Стало: Ежу досталась ¼ пирога.
             */
            '~\b1/2\b~u' => '½',
            '~\b1/3\b~u' => '⅓',
            '~\b1/4\b~u' => '¼',
            '~\b3/4\b~u' => '¾',

            /**
             * Заменяем самопальные стрелки соответствующими символами.
             * @todo Возможны проблемы в этими символами при переводе iconv в cp1251.
             * Было:  Пуск -> Выполнить...
             * Стало: Пуск → Выполнить...
             */
            '~([^-]|^)->~u' => '$1→',
            '~<-([^-]|$)~u' => '←$1',

            /**
             * Слепляем кавычки с текстом, взятым в них.
             * Было:  Фабрика " Красная Заря-3  "
             * Стало: Фабрика "Красная Заря-3"
             */
            '~"\s*([^"]+\S)\s*"~u' => '"$1"',

            /**
             * Превращаем кавычки-лапки в ёлочки.
             * В правиле указан знак "больше" для обхода ошибок со скобками
             * тэгов в гипертексте.
             * Было:  Фабрика "Красная Заря-3"
             * Стало: Фабрика «Красная Заря-3»
             */
            '~([^(\s|>)])"~u' => '$1»',
            '~"(\S)~u' => '«$1',

            // @todo Вложенные кавычки следует заменять на „“.
        );

        /**
         * Меняем местами восклицательный знак со знаком вопроса.
         * Было:  Иван, ты!?
         * Стало: Иван, ты?!
         */
        $str = str_replace('!?', '?!', $str);

        /**
         * Применяем означенные выше правила, поисанные регулярными выражениями
         * к заданной строке.
         */
        $str = preg_replace(array_keys($rules), array_values($rules), $str);

        /**
         * За самой последней буквой должен стоять знак препинания,
         * если его нет, мы ставим точку сами.
         * Правило применяется опционально, для строк не являющихся
         * "заголовками".
         * Было:  Это конец
         * Стало: Это конец.
         */
        if ($mode!='title')
            $str = preg_replace('~(\p{L})$~u', '$1.', $str);

        /**
         * Заменяем прямой опостроф на гнутый.
         * @todo Следует удостовериться в равноценности символов.
         * Было:  д'Артаньян был гасконцем.
         * Стало: д’Артаньян был гасконцем.
         */
        $str = str_replace("'", '’', $str);

        /**
         * Избавляемся от бесхозных кавычек.
         * @todo Очень злое правило. И как любое зло может действовать бездумно.
         * Было:  Фабрика" «Красная Заря-3»
         * Стало: Фабрика «Красная Заря-3»
         */
        $str = str_replace('"', '', $str);

        return $str;
    }
}

?>